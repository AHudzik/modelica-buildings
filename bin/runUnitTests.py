#!/usr/bin/python
####################################################
# Script that writes runAll.mos, which runs all
# unit tests.
# This script searches for all mos files that
# contain the word simulate.
#
# MWetter@lbl.gov                        2009-040-10 
####################################################
import os, string, fnmatch, pwd, os.path
# --------------------------
LIBHOME="C:/Documents and Settings/mwetter/Desktop/modelica/Buildings"
FLUHOME="P:/ldrd/bie/modeling/Modelica/package.mo"

def checkKey(key, fileName, counter):
        filObj=file(fileName)
        filTex=filObj.readline()
	# Strip white spaces so we can test strpos for zero.
        # This test returns non-zero for partial classes.
        filTex.strip()
        strpos=filTex.find("within")
        if strpos == 0:
            # first line is "within ...
            # get second line
            filTex=filObj.readline()
            filTex.strip()
        strpos=filTex.find(key)
        if strpos == 0:
            counter += 1;
        filObj.close()
        return counter
        
# --------------------------
def listFiles(dir):
    iMod=0
    iBlo=0
    iFun=0
    iRun=1
    for root, dirs, files in os.walk(dir):
        pos=string.find(root, 'svn')
        # skip svn folders
        if pos == -1:
            for filNam in files:
                # find .mos files
                pos=string.find(filNam, '.mos')
                if pos > -1:
                    # find files that contain simulate command
                    filFulNam=os.path.join(root, filNam)
                    filObj=file(filFulNam)
                    filTex=filObj.read()
                    strpos=filTex.find("simulate")
                    if strpos > -1:
                        runFil.write("cd " + root + "\n")
                        runFil.write("RunScript(\"" + filNam + "\");\n")
                        runFil.write("cd " + LIBHOME + "\n")
                        iRun=iRun+1
                    filObj.close()
                # find .mo files
                pos=string.find(filNam, '.mo')
                posExa=string.find(root, 'Examples')
                if pos > -1 and posExa == -1:
                     # find classes that are not partial
                    filFulNam=os.path.join(root, filNam)
                    iMod = checkKey("model", filFulNam, iMod)
                    iBlo = checkKey("block", filFulNam, iBlo)
                    iFun = checkKey("function", filFulNam, iFun)
    print "Generated runAll.mos with %d unit tests.\n" % iRun
    print "Number of models   : %d" % iMod
    print "          blocks   : %d" % iBlo
    print "          functions: %d" % iFun
   

curDir=os.path.split(os.path.abspath("."))[1]
if curDir == "Buildings":
    userName=pwd.getpwuid(os.getuid())[4]
    runFil=open("runAll.mos", 'w')
    runFil.write("// File autogenerated by " + userName + ". Do not edit.\n")
    runFil.write("openModel(\"" + FLUHOME + "\");\n")
    runFil.write("openModel(\"" + LIBHOME + "/package.mo\");\n")
    listFiles(".")
    runFil.close()
else:
    print "*** This script must be run from the Buildings directory."
    print "*** Exit with error. Did not do anything."
    

